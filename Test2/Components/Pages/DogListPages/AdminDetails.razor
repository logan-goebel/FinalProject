@page "/doglists/admin/details"
@using Microsoft.EntityFrameworkCore
@using Test2.Models
@inject IDbContextFactory<Test2.Data.Test2Context> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>
@if (doglist is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>@doglist.DogName</h1>

    <div>

        <hr />
   
            <dl class="row">
                <dt class="col-sm-2">Name:</dt>
                <dd class="col-sm-10">@doglist.DogName</dd>
                <dt class="col-sm-2">Age:</dt>
                <dd class="col-sm-10">@doglist.DogAge</dd>
                <dt class="col-sm-2">Description:</dt>
                <dd class="col-sm-10">@doglist.DogDescription</dd>
                <dt class="col-sm-2">Breed:</dt>
                <dd class="col-sm-10">@doglist.DogBreed</dd>
            </dl>
            <div>
                <a href="@($"/doglists/edit?id={doglist.Id}")">Edit</a> |
                <a href="@($"/doglists/admin")">Back to List</a>
            </div>
            
    </div>
}

@code {
    private DogList? doglist;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        doglist = await context.DogList.FirstOrDefaultAsync(m => m.Id == Id);

        if (doglist is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
