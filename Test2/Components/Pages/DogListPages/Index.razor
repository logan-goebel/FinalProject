@page "/doglists"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Test2.Models
@using Test2.Data
@implements IAsyncDisposable
@inject IDbContextFactory<Test2.Data.Test2Context> DbFactory

<PageTitle>Index</PageTitle>

<form action="/doglists" data-enhance>
    <input type="search" name="breedFilter" />

    <input type="submit" value="Search by breed" />
</form><table style="width:100%">
    <tr>
        <td>Photo</td>
        <td>Name</td>
        <td>Age</td>
        <td>Breed</td>
        <td>Description</td>
        <td>Links</td>
    </tr>
    @foreach (var item in listOfDogs)
    {
        <tr>
            <td>
            <img src=@item.dogPhoto alt="myDog" style="width:100px;height:100px" >
            </td>
            <td >
                @item.DogName
            </td>
            <td>
                @item.DogAge
            </td>
            <td>
                @item.DogBreed
            </td>
            <td >
                @item.DogDescription
            </td>
            <td>
                
                <a href="@($"doglists/details?id={@item.Id}")">Details</a> |
                
            </td>
        </tr>
        
    }

</table>

@code {

    [Parameter]
    [SupplyParameterFromQuery]
    public string? breedFilter { get; set; }//Create a collection of Book objects.
    public IEnumerable<DogList> listOfDogs { get; set; } = new List<DogList>();
    private Test2Context context = default!;
    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
        // fill selected data to the BookList of books

        if (breedFilter != null)
        {
            if (breedFilter != null)
            {
                listOfDogs = context.DogList.Where(
                item => item.DogBreed.ToLower().Contains(breedFilter)).ToList();
            }
        }
        else
        {
            listOfDogs = context.DogList.ToList();
        }  

    }
    public async ValueTask DisposeAsync() => await context.DisposeAsync();

}
